{
  "openapi": "3.1.0",
  "info": {
    "title": "MyTrip - Road Trip Planner API",
    "description": "\n    A comprehensive road trip planning API with intelligent route optimization, enhanced error handling, and user authentication.\n\n    ## üöÄ Features\n\n    - ‚úÖ **Trip Management**: Create, view, and manage road trips with enhanced validation\n    - ‚úÖ **Days Organization**: Day-by-day trip planning with automatic date calculation\n    - ‚úÖ **Stops Management**: Comprehensive stops system with 12 categories and detailed planning\n    - ‚úÖ **Intelligent Routing**: Hybrid GraphHopper routing with automatic fallback\n    - ‚úÖ **Enhanced Error Handling**: Actionable error messages with recovery guidance\n    - ‚úÖ **Place Search Caching**: Aggressive caching for improved performance\n    - ‚úÖ **Rate Limit Management**: Exponential backoff and circuit breaker patterns\n    - ‚úÖ **Modern Pagination**: Navigation links and comprehensive metadata\n    - ‚úÖ **Input Validation**: Sanitization and security protection\n    - ‚úÖ **User Authentication**: Secure Bearer token authentication\n    - ‚úÖ **Collaborative Planning**: Multi-user trip management\n\n    ## üõ°Ô∏è Recent Improvements\n\n    ### Enhanced Trip Creation\n    - **Input Sanitization**: Removes dangerous characters to prevent injection attacks\n    - **Smart Validation**: Length limits, date range checks, meaningful content validation\n    - **Enhanced Response**: Provides contextual next steps and planning suggestions\n    - **Better Onboarding**: Guides users through the trip creation process\n\n    ### Intelligent Routing System\n    - **Hybrid Approach**: Self-hosted GraphHopper with cloud fallback\n    - **Geographic Coverage**: Primary coverage for Israel/Palestine, global fallback\n    - **Rate Limit Protection**: Exponential backoff prevents API quota exhaustion\n    - **Circuit Breaker**: Skips unnecessary computations for out-of-bounds coordinates\n    - **Enhanced Error Messages**: Specific guidance for different error scenarios\n\n    ### Performance Optimizations\n    - **Place Search Caching**: 5-minute TTL cache for faster repeated searches\n    - **Resource Management**: Shared HTTP clients prevent memory leaks\n    - **Smart Bounds Checking**: Reduces unnecessary external API calls\n    - **Matrix Optimization**: Efficient distance matrix computation with fallbacks\n    - **Modern Pagination**: Navigation links reduce client-side URL construction\n\n    ## Authentication\n\n    This API uses Bearer token authentication. To get started:\n\n    1. **Login** using the `/auth/login` endpoint with your email address\n    2. **Copy the access_token** from the response\n    3. **Click the \"Authorize\" button** below and enter: `Bearer <your_token>`\n    4. **Use protected endpoints** - they will automatically include your authentication\n\n    ### Quick Start Example:\n\n    ```bash\n    # 1. Login to get your token\n    curl -X POST \"http://localhost:8100/auth/login\" \\\n         -H \"Content-Type: application/json\" \\\n         -d '{\"email\": \"adar.bahar@gmail.com\"}'\n\n    # 2. Create a new trip (start_date is optional)\n    curl -X POST \"http://localhost:8100/trips/\" \\\n         -H \"Authorization: Bearer fake_token_YOUR_TOKEN_HERE\" \\\n         -H \"Content-Type: application/json\" \\\n         -d '{\"title\": \"My Road Trip\", \"destination\": \"California, USA\"}'\n\n    # 3. List your trips\n    curl -X GET \"http://localhost:8100/trips/\" \\\n         -H \"Authorization: Bearer fake_token_YOUR_TOKEN_HERE\"\n    ```\n\n    ## üó∫Ô∏è Routing & Navigation\n\n    ### Intelligent Routing System\n    The API provides sophisticated route computation with multiple fallback strategies:\n\n    #### Primary Routing (Self-hosted GraphHopper)\n    - **Coverage**: Israel and Palestine region\n    - **Performance**: Fast, no rate limits\n    - **Features**: Turn-by-turn directions, route optimization\n\n    #### Fallback Routing (GraphHopper Cloud)\n    - **Coverage**: Global\n    - **Usage**: Automatic fallback for out-of-bounds coordinates\n    - **Rate Limiting**: 3 calls per minute with exponential backoff\n\n    #### Route Computation Features\n    - **Route Optimization**: Traveling salesman optimization for multiple stops\n    - **Multiple Profiles**: Car, motorcycle, bicycle support\n    - **Avoid Options**: Tolls, highways, ferries\n    - **Matrix Computation**: Distance/time matrices for optimization\n    - **Error Recovery**: Graceful degradation with helpful error messages\n\n    #### Error Handling\n    - **Rate Limit (429)**: Exponential backoff with clear retry guidance\n    - **Out of Bounds (400)**: Specific advice for geographic limitations\n    - **Service Errors (500)**: Actionable steps for recovery\n    - **Circuit Breaker**: Prevents cascading failures\n\n    ## üöó Trip Creation\n\n    ### Enhanced Trip Creation\n    When creating trips, the API now provides enhanced validation and guidance:\n\n    #### Required Fields\n    - **title**: 1-255 characters (sanitized for security)\n    - **destination**: Optional, max 255 characters\n    - **start_date**: Optional, format YYYY-MM-DD (validated against future limits)\n\n    #### Auto-Generated Fields\n    - **slug**: URL-friendly identifier from title\n    - **status**: Defaults to \"draft\"\n    - **next_steps**: Contextual guidance for trip planning\n    - **suggestions**: Time-based planning advice\n\n    #### Enhanced Response\n    ```json\n    {\n      \"trip\": { ... },\n      \"next_steps\": [\n        \"Set your trip start date to help with planning\",\n        \"Create your first day in Jerusalem\"\n      ],\n      \"suggestions\": {\n        \"planning_timeline\": \"You have plenty of time to plan...\",\n        \"popular_destinations\": [...]\n      }\n    }\n    ```\n\n    ## üìÑ Modern Pagination\n\n    ### Enhanced Pagination System\n    All list endpoints now support modern pagination with navigation links:\n\n    #### Standard Pagination Parameters\n    - **page**: Page number (1-based, default: 1)\n    - **size**: Items per page (1-100, default: 20)\n    - **format**: Response format - 'modern' (default) or 'legacy'\n\n    #### Modern Response Format\n    ```json\n    {\n      \"data\": [...],\n      \"meta\": {\n        \"current_page\": 1,\n        \"per_page\": 20,\n        \"total_items\": 45,\n        \"total_pages\": 3,\n        \"has_next\": true,\n        \"has_prev\": false,\n        \"from_item\": 1,\n        \"to_item\": 20\n      },\n      \"links\": {\n        \"self\": \"http://localhost:8000/trips?page=1&size=20\",\n        \"first\": \"http://localhost:8000/trips?page=1&size=20\",\n        \"last\": \"http://localhost:8000/trips?page=3&size=20\",\n        \"next\": \"http://localhost:8000/trips?page=2&size=20\",\n        \"prev\": null\n      }\n    }\n    ```\n\n    #### Navigation Benefits\n    - **Self-contained URLs**: No client-side URL construction needed\n    - **Filter Preservation**: Query parameters maintained across pages\n    - **RESTful Navigation**: Standard first/last/next/prev links\n    - **Metadata Rich**: Comprehensive pagination information\n\n    #### Backward Compatibility\n    Legacy format available via `format=legacy` parameter for existing clients.\n\n    ## üîç Place Search & Geocoding\n\n    ### Enhanced Place Search\n    The API provides intelligent place search with aggressive caching:\n\n    #### Search Features\n    - **External Integration**: MapTiler geocoding API\n    - **Aggressive Caching**: 5-minute TTL for improved performance\n    - **Smart Ranking**: Relevance-based result ordering\n    - **Proximity Search**: Location-based result prioritization\n    - **Auto-complete**: Real-time search suggestions\n\n    #### Search Parameters\n    - **query**: Search term (min 2 characters)\n    - **lat/lon**: Optional proximity coordinates\n    - **radius**: Search radius in meters (default: 50km)\n    - **limit**: Max results (1-50, default: 10)\n\n    #### Performance Benefits\n    - **Cache Hits**: Instant results for repeated searches\n    - **Reduced API Costs**: Fewer external geocoding calls\n    - **Better UX**: Immediate response for common searches\n\n    ## üõë Stops Management\n\n    The stops system allows detailed itinerary planning with:\n\n    ### Stop Types (12 categories):\n    - üè® **Accommodation**: Hotels, B&Bs, camping\n    - üçΩÔ∏è **Food**: Restaurants, cafes, bars\n    - üéØ **Attraction**: Museums, landmarks, tours\n    - ‚õΩ **Gas**: Fuel stations, charging points\n    - üõçÔ∏è **Shopping**: Stores, markets, outlets\n    - üöó **Transport**: Airports, train stations\n    - üè• **Services**: Banks, hospitals, repairs\n    - üå≤ **Nature**: Parks, trails, beaches\n    - üé≠ **Culture**: Theaters, galleries, events\n    - üåô **Nightlife**: Bars, clubs, entertainment\n    - üìç **Other**: Custom locations\n\n    ### Stop Features:\n    - **Time Management**: Arrival/departure times, duration estimates\n    - **Priority Levels**: Must see (1) to Optional (5)\n    - **Booking Info**: Confirmation numbers, status tracking\n    - **Cost Tracking**: Estimated and actual expenses\n    - **Contact Details**: Phone, website, notes\n    - **Flexible Ordering**: Drag-and-drop reordering within days\n\n    ### Stop Operations:\n    - Create, read, update, delete stops\n    - Reorder stops within days\n    - Filter by type and priority\n    - Include place information\n    - Trip-wide stops summary\n\n    ## üö® Error Handling & Recovery\n\n    ### Enhanced Error Responses\n    The API provides detailed error information with actionable recovery steps:\n\n    #### Rate Limiting (429)\n    ```json\n    {\n      \"detail\": \"Routing temporarily unavailable due to rate limits\",\n      \"error_type\": \"RATE_LIMIT\",\n      \"retry_after\": 60,\n      \"suggestions\": [\n        \"Wait 1-2 minutes before trying again\",\n        \"Consider using fewer stops\",\n        \"Try again during off-peak hours\"\n      ]\n    }\n    ```\n\n    #### Geographic Coverage (400)\n    ```json\n    {\n      \"detail\": \"Coordinates are outside supported region\",\n      \"error_type\": \"OUT_OF_BOUNDS\",\n      \"supported_regions\": [\"Israel\", \"Palestine\"],\n      \"suggestions\": [\n        \"Try using nearby major cities\",\n        \"Check if all locations are in the same region\",\n        \"Consider splitting international trips\"\n      ]\n    }\n    ```\n\n    #### Service Errors (500)\n    ```json\n    {\n      \"detail\": \"Routing service temporarily unavailable\",\n      \"error_type\": \"SERVICE_ERROR\",\n      \"suggestions\": [\n        \"Try again in a few moments\",\n        \"Check that all locations are valid\",\n        \"Contact support if problem persists\"\n      ]\n    }\n    ```\n\n    ### Circuit Breaker Pattern\n    - **Automatic Protection**: Prevents cascading failures\n    - **Smart Backoff**: Exponential delays for failed services\n    - **Resource Conservation**: Skips unnecessary API calls\n    - **Graceful Degradation**: Maintains functionality during outages\n\n    **Development Note**: This is a development authentication system. Any valid email address can be used to login and will automatically create a user account.\n    ",
    "version": "1.0.0",
    "contact": {
      "name": "MyTrip API Support",
      "email": "support@mytrip.com",
      "url": "https://github.com/AdarBahar/MyTrip"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint with system status information.\n\nReturns:\n- **status**: Service health status\n- **service**: Service name and version\n- **routing_mode**: Current routing configuration (selfhost/cloud)\n- **use_cloud_matrix**: Whether cloud matrix computation is enabled\n\nThis endpoint is useful for:\n- Monitoring service availability\n- Checking routing configuration\n- Debugging connectivity issues\n- Load balancer health checks",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Fake Login",
        "description": "**Login with Email Address**\n\nThis is a development authentication endpoint that creates or returns a user for any valid email address.\n\n**How to use:**\n1. Enter any valid email address\n2. Copy the `access_token` from the response\n3. Click the \"Authorize\" button in Swagger UI\n4. Enter: `Bearer <your_access_token>`\n5. Use protected endpoints with automatic authentication\n\n**Example:**\n- Email: `adar.bahar@gmail.com`\n- Response: `{\"access_token\": \"fake_token_ABC123\", ...}`\n- Authorization: `Bearer fake_token_ABC123`\n\n**Note:** This automatically creates a new user account if the email doesn't exist.",
        "operationId": "fake_login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Current User Profile",
        "description": "**Get Current User Profile**\n\nReturns the profile information for the currently authenticated user.\n\n**Requires Authentication:** You must include a valid Bearer token in the Authorization header.\n\n**How to authenticate:**\n1. First login using `/auth/login` to get your token\n2. Click the \"Authorize\" button and enter: `Bearer <your_token>`\n3. This endpoint will then return your user profile",
        "operationId": "get_current_user_profile_auth_me_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "**Logout**\n\nLogout endpoint for completeness. Since tokens are stateless in this development system,\nthis endpoint simply returns a success message.\n\n**Note:** In a production system, this would invalidate the token server-side.\nFor this development system, simply remove the token from your client storage.",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/": {
      "post": {
        "tags": [
          "trips"
        ],
        "summary": "Create Trip",
        "description": "**Create a New Trip**\n\nCreate a new road trip with the provided details.\n\n**Authentication Required:** You must be logged in to create trips.\n\n**Note:** The trip slug is auto-generated from the title and must be unique among your trips.",
        "operationId": "create_trip_trips__post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "trips"
        ],
        "summary": "List Trips",
        "description": "**List Your Trips with Enhanced Pagination**\n\nGet a paginated list of your trips with modern navigation links and optional filtering.\n\n**Authentication Required:** You must be logged in to view trips.\n\n**Enhanced Pagination Features:**\n- Navigation links (first, last, next, prev, self)\n- Comprehensive metadata (total pages, current position, etc.)\n- Backward compatibility with legacy format\n\n**Parameters:**\n- `status`: Filter by trip status (draft, active, completed, archived)\n- `owner`: Filter by owner ID (defaults to your trips)\n- `page`: Page number (starts at 1)\n- `size`: Number of trips per page (1-100)\n- `format`: Response format - 'modern' (default) or 'legacy'\n\n**Modern Response Format:**\n```json\n{\n  \"data\": [...],\n  \"meta\": {\n    \"current_page\": 1,\n    \"per_page\": 20,\n    \"total_items\": 45,\n    \"total_pages\": 3,\n    \"has_next\": true,\n    \"has_prev\": false,\n    \"from_item\": 1,\n    \"to_item\": 20\n  },\n  \"links\": {\n    \"self\": \"http://localhost:8000/trips?page=1&size=20\",\n    \"first\": \"http://localhost:8000/trips?page=1&size=20\",\n    \"last\": \"http://localhost:8000/trips?page=3&size=20\",\n    \"next\": \"http://localhost:8000/trips?page=2&size=20\",\n    \"prev\": null\n  }\n}\n```\n\n**Returns:** Paginated list of trips with navigation links and comprehensive metadata.",
        "operationId": "list_trips_trips__get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TripStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by trip status",
              "title": "Status"
            },
            "description": "Filter by trip status"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by owner ID (defaults to your trips)",
              "title": "Owner"
            },
            "description": "Filter by owner ID (defaults to your trips)"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (starts at 1)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (starts at 1)"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of trips per page",
              "default": 20,
              "title": "Size"
            },
            "description": "Number of trips per page"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(legacy|modern)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Response format: 'legacy' or 'modern'",
              "default": "modern",
              "title": "Format"
            },
            "description": "Response format: 'legacy' or 'modern'"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse_Trip_"
                    },
                    {
                      "$ref": "#/components/schemas/TripList"
                    }
                  ],
                  "title": "Response List Trips Trips  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}": {
      "get": {
        "tags": [
          "trips"
        ],
        "summary": "Get Trip",
        "description": "Get a specific trip",
        "operationId": "get_trip_trips__trip_id__get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "trips"
        ],
        "summary": "Update Trip",
        "description": "**Update Trip**\n\nUpdate trip details including start date, title, destination, etc.\n\n**Authentication Required:** You must be the trip owner.\n\n**Note:** Updating the start_date will affect all day dates in the trip.",
        "operationId": "update_trip_trips__trip_id__patch",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}/archive": {
      "post": {
        "tags": [
          "trips"
        ],
        "summary": "Archive Trip",
        "description": "Archive a trip",
        "operationId": "archive_trip_trips__trip_id__archive_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}/publish": {
      "post": {
        "tags": [
          "trips"
        ],
        "summary": "Publish Trip",
        "description": "Publish a trip",
        "operationId": "publish_trip_trips__trip_id__publish_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/route/compute": {
      "post": {
        "tags": [
          "routing"
        ],
        "summary": "Compute Route",
        "description": "Compute a route for a day",
        "operationId": "compute_route_routing_days__day_id__route_compute_post",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteComputeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutePreview"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/routes": {
      "get": {
        "tags": [
          "routing"
        ],
        "summary": "List Saved Routes",
        "description": "List saved route versions for a day (active first).",
        "operationId": "list_saved_routes_routing_days__day_id__routes_get",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteVersionList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/routes/{route_version_id}/activate": {
      "patch": {
        "tags": [
          "routing"
        ],
        "summary": "Activate Route Version",
        "description": "Set a specific route version as the active (default) for the day.",
        "operationId": "activate_route_version_routing_days__day_id__routes__route_version_id__activate_patch",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "route_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Route Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteVersionSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/routes/{route_version_id}/primary": {
      "patch": {
        "tags": [
          "routing"
        ],
        "summary": "Set Primary Route Version",
        "description": "Mark a specific route version as primary (recommended).",
        "operationId": "set_primary_route_version_routing_days__day_id__routes__route_version_id__primary_patch",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "route_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Route Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteVersionSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/routes/{route_version_id}": {
      "patch": {
        "tags": [
          "routing"
        ],
        "summary": "Update Route Version",
        "description": "Update route version metadata (e.g., rename).",
        "operationId": "update_route_version_routing_days__day_id__routes__route_version_id__patch",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "route_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Route Version Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteVersionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteVersionSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/route/commit": {
      "post": {
        "tags": [
          "routing"
        ],
        "summary": "Commit Route",
        "description": "Commit a computed route as a new version",
        "operationId": "commit_route_routing_days__day_id__route_commit_post",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCommitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteVersionSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/{day_id}/active-summary": {
      "get": {
        "tags": [
          "routing"
        ],
        "summary": "Get Day Active Summary",
        "description": "Return lightweight active route summary for a single day.\nDoes not call external routing. Uses saved active route version if present.",
        "operationId": "get_day_active_summary_routing_days__day_id__active_summary_get",
        "parameters": [
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayRouteActiveSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/routing/days/bulk-active-summaries": {
      "post": {
        "tags": [
          "routing"
        ],
        "summary": "Get Bulk Active Summaries",
        "description": "Return lightweight active route summaries for multiple days.",
        "operationId": "get_bulk_active_summaries_routing_days_bulk_active_summaries_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDayRouteSummaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDayRouteSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}/days": {
      "get": {
        "tags": [
          "days"
        ],
        "summary": "List Days",
        "description": "**List Days in Trip**\n\nGet all days for a specific trip, ordered by sequence number.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "list_days_trips__trip_id__days_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "include_stops",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include stops count and route info",
              "default": false,
              "title": "Include Stops"
            },
            "description": "Include stops count and route info"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "days"
        ],
        "summary": "Create Day",
        "description": "**Create New Day**\n\nAdd a new day to the trip. If sequence number is not provided,\nit will be auto-generated as the next available number.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "create_day_trips__trip_id__days_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DayCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Day"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}/days/summary": {
      "get": {
        "tags": [
          "days"
        ],
        "summary": "List Days With Locations",
        "description": "List days and include start/end places for each day in a single call.\nNote: This route must appear before the dynamic '/{day_id}' to avoid being captured by it.",
        "operationId": "list_days_with_locations_trips__trip_id__days_summary_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayListSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/trips/{trip_id}/days/{day_id}": {
      "get": {
        "tags": [
          "days"
        ],
        "summary": "Get Day",
        "description": "**Get Specific Day**\n\nGet details for a specific day in the trip.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "get_day_trips__trip_id__days__day_id__get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Day"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "days"
        ],
        "summary": "Update Day",
        "description": "**Update Day**\n\nUpdate details for a specific day in the trip.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "update_day_trips__trip_id__days__day_id__patch",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DayUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Day"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "days"
        ],
        "summary": "Delete Day",
        "description": "**Delete Day**\n\nSoft delete a day from the trip. This will also soft delete\nall associated stops and routes.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "delete_day_trips__trip_id__days__day_id__delete",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stops/types": {
      "get": {
        "tags": [
          "stops"
        ],
        "summary": "Get Stop Types",
        "description": "**Get Stop Types**\n\nGet all available stop types with their metadata for UI display.\n\n**No authentication required** - this is reference data.",
        "operationId": "get_stop_types_stops_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StopTypeInfo"
                  },
                  "type": "array",
                  "title": "Response Get Stop Types Stops Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stops/{trip_id}/days/{day_id}/stops": {
      "get": {
        "tags": [
          "stops"
        ],
        "summary": "List Stops",
        "description": "**List Stops for Day**\n\nGet all stops for a specific day, ordered by sequence number.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "list_stops_stops__trip_id__days__day_id__stops_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "include_place",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include place information",
              "default": false,
              "title": "Include Place"
            },
            "description": "Include place information"
          },
          {
            "name": "stop_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by stop type (case-insensitive)",
              "title": "Stop Type"
            },
            "description": "Filter by stop type (case-insensitive)"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "stops"
        ],
        "summary": "Create Stop",
        "description": "**Create New Stop**\n\nAdd a new stop to a specific day.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "create_stop_stops__trip_id__days__day_id__stops_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stop"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stops/{trip_id}/days/{day_id}/stops/{stop_id}": {
      "get": {
        "tags": [
          "stops"
        ],
        "summary": "Get Stop",
        "description": "**Get Specific Stop**\n\nGet details for a specific stop.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "get_stop_stops__trip_id__days__day_id__stops__stop_id__get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "stop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stop Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stop"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "stops"
        ],
        "summary": "Update Stop",
        "description": "**Update Stop**\n\nUpdate stop details including type, timing, notes, etc.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "update_stop_stops__trip_id__days__day_id__stops__stop_id__patch",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "stop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stop Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stop"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "stops"
        ],
        "summary": "Delete Stop",
        "description": "**Delete Stop**\n\nRemove a stop from the day.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "delete_stop_stops__trip_id__days__day_id__stops__stop_id__delete",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "stop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stop Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stops/{trip_id}/days/{day_id}/stops/reorder": {
      "post": {
        "tags": [
          "stops"
        ],
        "summary": "Reorder Stops",
        "description": "**Reorder Stops**\n\nBulk reorder stops within a day by updating their sequence numbers.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "reorder_stops_stops__trip_id__days__day_id__stops_reorder_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "day_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Day Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopBulkReorder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stops/{trip_id}/stops/summary": {
      "get": {
        "tags": [
          "stops"
        ],
        "summary": "Get Trip Stops Summary",
        "description": "**Get Trip Stops Summary**\n\nGet a summary of all stops across all days in the trip.\n\n**Authentication Required:** You must be the trip owner.",
        "operationId": "get_trip_stops_summary_stops__trip_id__stops_summary_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopsSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/search": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Search Places",
        "description": "**Enhanced Place Search with Modern Pagination**\n\nSearch for places by name using MapTiler geocoding API with aggressive caching and modern pagination.\n\n**Features:**\n- Aggressive caching (5-minute TTL) for improved performance\n- Proximity-based search with lat/lon parameters\n- Integration with user's saved places\n- Modern pagination with navigation links\n\n**Parameters:**\n- `query`: Search term (minimum 2 characters)\n- `lat/lon`: Optional coordinates for proximity-based results\n- `radius`: Search radius in meters (default: 50km)\n- `limit`: Maximum results (1-50, default: 10)\n- `format`: Response format - 'modern' (default) or 'legacy'\n\n**Modern Response Format:**\n```json\n{\n  \"data\": [...],\n  \"meta\": {\n    \"current_page\": 1,\n    \"per_page\": 10,\n    \"total_items\": 25,\n    \"total_pages\": 3,\n    \"has_next\": true,\n    \"has_prev\": false\n  },\n  \"links\": {\n    \"self\": \"http://localhost:8000/places/search?query=jerusalem&page=1\",\n    \"first\": \"http://localhost:8000/places/search?query=jerusalem&page=1\",\n    \"next\": \"http://localhost:8000/places/search?query=jerusalem&page=2\"\n  }\n}\n```\n\n**Returns:** List of candidate places without creating database records.",
        "operationId": "search_places_places_search_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "Search term (minimum 2 characters)",
              "title": "Query"
            },
            "description": "Search term (minimum 2 characters)"
          },
          {
            "name": "lat",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 90.0,
                  "minimum": -90.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Latitude for proximity search",
              "title": "Lat"
            },
            "description": "Latitude for proximity search"
          },
          {
            "name": "lon",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "maximum": 180.0,
                  "minimum": -180.0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Longitude for proximity search",
              "title": "Lon"
            },
            "description": "Longitude for proximity search"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search radius in meters",
              "default": 50000,
              "title": "Radius"
            },
            "description": "Search radius in meters"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of results",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(legacy|modern)$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Response format",
              "default": "modern",
              "title": "Format"
            },
            "description": "Response format"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse_PlaceSearchItem_"
                    },
                    {
                      "$ref": "#/components/schemas/PlaceSearchResult"
                    }
                  ],
                  "title": "Response Search Places Places Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/geocode": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Geocode Address",
        "description": "Geocode a free-form address using MapTiler.",
        "operationId": "geocode_address_places_geocode_get",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "title": "Address"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeocodingResult"
                  },
                  "title": "Response Geocode Address Places Geocode Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/reverse-geocode": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Reverse Geocode",
        "description": "Reverse geocode coordinates using MapTiler.",
        "operationId": "reverse_geocode_places_reverse_geocode_get",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "maximum": 90.0,
              "minimum": -90.0,
              "title": "Lat"
            }
          },
          {
            "name": "lon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "maximum": 180.0,
              "minimum": -180.0,
              "title": "Lon"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeocodingResult"
                  },
                  "title": "Response Reverse Geocode Places Reverse Geocode Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/": {
      "post": {
        "tags": [
          "places"
        ],
        "summary": "Create Place",
        "description": "Create a new place owned by the current user.",
        "operationId": "create_place_places__post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/{place_id}": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Get Place",
        "operationId": "get_place_places__place_id__get",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "places"
        ],
        "summary": "Update Place",
        "operationId": "update_place_places__place_id__patch",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "places"
        ],
        "summary": "Delete Place",
        "operationId": "delete_place_places__place_id__delete",
        "parameters": [
          {
            "name": "place_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Place Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/places/bulk": {
      "get": {
        "tags": [
          "places"
        ],
        "summary": "Get Places Bulk",
        "description": "Batch fetch places by IDs. Use comma-separated ids param.",
        "operationId": "get_places_bulk_places_bulk_get",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Comma-separated place IDs",
              "title": "Ids"
            },
            "description": "Comma-separated place IDs"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceSchema"
                  },
                  "title": "Response Get Places Bulk Places Bulk Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get User Settings",
        "operationId": "get_user_settings_user_settings_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "settings"
        ],
        "summary": "Update User Settings",
        "operationId": "update_user_settings_user_settings_patch",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BulkDayRouteSummaryRequest": {
        "properties": {
          "day_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Day Ids"
          }
        },
        "type": "object",
        "required": [
          "day_ids"
        ],
        "title": "BulkDayRouteSummaryRequest"
      },
      "BulkDayRouteSummaryResponse": {
        "properties": {
          "summaries": {
            "items": {
              "$ref": "#/components/schemas/DayRouteActiveSummary"
            },
            "type": "array",
            "title": "Summaries"
          }
        },
        "type": "object",
        "required": [
          "summaries"
        ],
        "title": "BulkDayRouteSummaryResponse"
      },
      "Day": {
        "properties": {
          "seq": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Seq",
            "description": "Day sequence number (1, 2, 3, etc.)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DayStatus"
              }
            ],
            "description": "Day status",
            "default": "active"
          },
          "rest_day": {
            "type": "boolean",
            "title": "Rest Day",
            "description": "Whether this is a rest day (no driving)",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes and metadata"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "trip_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Start Date",
            "description": "Trip start date (for calculated_date)"
          },
          "calculated_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calculated Date",
            "description": "Calculate the date for this day based on trip start date and sequence",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "seq",
          "id",
          "trip_id",
          "created_at",
          "updated_at",
          "calculated_date"
        ],
        "title": "Day",
        "description": "Day schema"
      },
      "DayCreate": {
        "properties": {
          "seq": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seq",
            "description": "Day sequence number (auto-generated if not provided)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DayStatus"
              }
            ],
            "description": "Day status",
            "default": "active"
          },
          "rest_day": {
            "type": "boolean",
            "title": "Rest Day",
            "description": "Whether this is a rest day (no driving)",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes and metadata"
          }
        },
        "type": "object",
        "title": "DayCreate",
        "description": "Schema for creating a day"
      },
      "DayList": {
        "properties": {
          "days": {
            "items": {
              "$ref": "#/components/schemas/Day"
            },
            "type": "array",
            "title": "Days"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          }
        },
        "type": "object",
        "required": [
          "days",
          "total",
          "trip_id"
        ],
        "title": "DayList",
        "description": "Day list response schema"
      },
      "DayListSummary": {
        "properties": {
          "days": {
            "items": {
              "$ref": "#/components/schemas/Day"
            },
            "type": "array",
            "title": "Days"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/DayLocations"
            },
            "type": "array",
            "title": "Locations"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          }
        },
        "type": "object",
        "required": [
          "days",
          "locations",
          "total",
          "trip_id"
        ],
        "title": "DayListSummary",
        "description": "Days list along with start/end places for each day"
      },
      "DayLocations": {
        "properties": {
          "day_id": {
            "type": "string",
            "title": "Day Id"
          },
          "start": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaceSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "end": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlaceSchema"
              },
              {
                "type": "null"
              }
            ]
          },
          "route_total_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Total Km"
          },
          "route_total_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Total Min"
          },
          "route_coordinates": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Coordinates"
          }
        },
        "type": "object",
        "required": [
          "day_id"
        ],
        "title": "DayLocations"
      },
      "DayRouteActiveSummary": {
        "properties": {
          "day_id": {
            "type": "string",
            "title": "Day Id"
          },
          "start": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "route_total_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Total Km"
          },
          "route_total_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Total Min"
          },
          "route_coordinates": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Coordinates"
          },
          "route_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Version Id"
          }
        },
        "type": "object",
        "required": [
          "day_id"
        ],
        "title": "DayRouteActiveSummary"
      },
      "DayStatus": {
        "type": "string",
        "enum": [
          "active",
          "inactive"
        ],
        "title": "DayStatus"
      },
      "DayUpdate": {
        "properties": {
          "seq": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seq",
            "description": "Day sequence number"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DayStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Day status"
          },
          "rest_day": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rest Day",
            "description": "Whether this is a rest day"
          },
          "notes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes and metadata"
          }
        },
        "type": "object",
        "title": "DayUpdate",
        "description": "Schema for updating a day"
      },
      "GeocodingResult": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address"
          },
          "lat": {
            "type": "number",
            "title": "Lat"
          },
          "lon": {
            "type": "number",
            "title": "Lon"
          },
          "formatted_address": {
            "type": "string",
            "title": "Formatted Address"
          },
          "place_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place Id"
          },
          "types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Types"
          }
        },
        "type": "object",
        "required": [
          "address",
          "lat",
          "lon",
          "formatted_address"
        ],
        "title": "GeocodingResult"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "LoginRequest",
        "description": "Login request schema"
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/UserProfile"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "user"
        ],
        "title": "LoginResponse",
        "description": "Login response schema"
      },
      "PaginatedResponse_PlaceSearchItem_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PlaceSearchItem"
            },
            "type": "array",
            "title": "Data",
            "description": "List of items for current page"
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationLinks"
              }
            ],
            "description": "Navigation links"
          }
        },
        "type": "object",
        "required": [
          "data",
          "meta",
          "links"
        ],
        "title": "PaginatedResponse[PlaceSearchItem]"
      },
      "PaginatedResponse_Trip_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Trip"
            },
            "type": "array",
            "title": "Data",
            "description": "List of items for current page"
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationLinks"
              }
            ],
            "description": "Navigation links"
          }
        },
        "type": "object",
        "required": [
          "data",
          "meta",
          "links"
        ],
        "title": "PaginatedResponse[Trip]"
      },
      "PaginationLinks": {
        "properties": {
          "self": {
            "type": "string",
            "title": "Self",
            "description": "Current page URL"
          },
          "first": {
            "type": "string",
            "title": "First",
            "description": "First page URL"
          },
          "last": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last",
            "description": "Last page URL"
          },
          "next": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next",
            "description": "Next page URL"
          },
          "prev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prev",
            "description": "Previous page URL"
          }
        },
        "type": "object",
        "required": [
          "self",
          "first"
        ],
        "title": "PaginationLinks",
        "description": "Navigation links for pagination"
      },
      "PaginationMeta": {
        "properties": {
          "current_page": {
            "type": "integer",
            "title": "Current Page",
            "description": "Current page number (1-based)"
          },
          "per_page": {
            "type": "integer",
            "title": "Per Page",
            "description": "Items per page"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items",
            "description": "Total number of items"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there is a next page"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there is a previous page"
          },
          "from_item": {
            "type": "integer",
            "title": "From Item",
            "description": "First item number on current page",
            "readOnly": true
          },
          "to_item": {
            "type": "integer",
            "title": "To Item",
            "description": "Last item number on current page",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "current_page",
          "per_page",
          "total_items",
          "total_pages",
          "has_next",
          "has_prev",
          "from_item",
          "to_item"
        ],
        "title": "PaginationMeta",
        "description": "Pagination metadata"
      },
      "PlaceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat"
          },
          "lon": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lon"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "name",
          "lat",
          "lon"
        ],
        "title": "PlaceCreate",
        "description": "Schema for creating a place"
      },
      "PlaceSchema": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "lat": {
            "type": "number",
            "title": "Lat"
          },
          "lon": {
            "type": "number",
            "title": "Lon"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "lat",
          "lon",
          "created_at",
          "updated_at"
        ],
        "title": "PlaceSchema",
        "description": "Place response schema"
      },
      "PlaceSearchItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "lat": {
            "type": "number",
            "title": "Lat"
          },
          "lon": {
            "type": "number",
            "title": "Lon"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "is_saved": {
            "type": "boolean",
            "title": "Is Saved",
            "default": false
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "lat",
          "lon"
        ],
        "title": "PlaceSearchItem",
        "description": "Lightweight place item for search results (not persisted)"
      },
      "PlaceSearchResult": {
        "properties": {
          "places": {
            "items": {
              "$ref": "#/components/schemas/PlaceSearchItem"
            },
            "type": "array",
            "title": "Places"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "places",
          "total"
        ],
        "title": "PlaceSearchResult",
        "description": "Legacy place search result schema"
      },
      "PlaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "lat": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Lat"
          },
          "lon": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Lon"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "title": "PlaceUpdate",
        "description": "Schema for updating a place"
      },
      "RouteCommitRequest": {
        "properties": {
          "preview_token": {
            "type": "string",
            "title": "Preview Token"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "preview_token"
        ],
        "title": "RouteCommitRequest",
        "description": "Route commit request"
      },
      "RouteComputeRequest": {
        "properties": {
          "profile": {
            "type": "string",
            "pattern": "^(car|motorcycle|bike)$",
            "title": "Profile"
          },
          "optimize": {
            "type": "boolean",
            "title": "Optimize",
            "description": "Optimize VIA stop order (respects fixed stops)",
            "default": false
          },
          "fixed_stop_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fixed Stop Ids",
            "description": "Explicit list of fixed stop IDs (optional; otherwise use DB flags)"
          },
          "options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RouteOptions"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "profile"
        ],
        "title": "RouteComputeRequest",
        "description": "Route computation request"
      },
      "RouteLegSchema": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "route_version_id": {
            "type": "string",
            "title": "Route Version Id"
          },
          "seq": {
            "type": "integer",
            "title": "Seq"
          },
          "distance_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance Km"
          },
          "duration_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Min"
          },
          "geojson": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Geojson"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "route_version_id",
          "seq",
          "distance_km",
          "duration_min",
          "geojson",
          "meta",
          "created_at",
          "updated_at"
        ],
        "title": "RouteLegSchema",
        "description": "Route leg schema"
      },
      "RouteOptions": {
        "properties": {
          "avoid_highways": {
            "type": "boolean",
            "title": "Avoid Highways",
            "default": false
          },
          "avoid_tolls": {
            "type": "boolean",
            "title": "Avoid Tolls",
            "default": false
          },
          "additional_options": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Options"
          }
        },
        "type": "object",
        "title": "RouteOptions",
        "description": "Route computation options"
      },
      "RoutePreview": {
        "properties": {
          "total_km": {
            "type": "number",
            "title": "Total Km"
          },
          "total_min": {
            "type": "number",
            "title": "Total Min"
          },
          "geometry": {
            "type": "object",
            "title": "Geometry"
          },
          "legs": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Legs"
          },
          "debug": {
            "type": "object",
            "title": "Debug"
          },
          "preview_token": {
            "type": "string",
            "title": "Preview Token"
          },
          "proposed_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Order",
            "description": "Proposed stop ID order (START..VIA..END)"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings",
            "description": "Potential issues like long detours"
          }
        },
        "type": "object",
        "required": [
          "total_km",
          "total_min",
          "geometry",
          "legs",
          "debug",
          "preview_token"
        ],
        "title": "RoutePreview",
        "description": "Route preview response"
      },
      "RouteVersionList": {
        "properties": {
          "routes": {
            "items": {
              "$ref": "#/components/schemas/RouteVersionSchema"
            },
            "type": "array",
            "title": "Routes"
          }
        },
        "type": "object",
        "required": [
          "routes"
        ],
        "title": "RouteVersionList",
        "description": "Route version list schema"
      },
      "RouteVersionSchema": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "day_id": {
            "type": "string",
            "title": "Day Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "profile_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Used"
          },
          "total_km": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Km"
          },
          "total_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Min"
          },
          "geojson": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Geojson"
          },
          "totals": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totals"
          },
          "stop_snapshot": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop Snapshot"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "legs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RouteLegSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Legs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "day_id",
          "version",
          "is_active",
          "is_primary",
          "name",
          "profile_used",
          "total_km",
          "total_min",
          "geojson",
          "totals",
          "stop_snapshot",
          "created_by",
          "created_at",
          "updated_at"
        ],
        "title": "RouteVersionSchema",
        "description": "Route version schema"
      },
      "RouteVersionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "RouteVersionUpdate"
      },
      "SettingsResponse": {
        "properties": {
          "settings": {
            "type": "object",
            "title": "Settings"
          }
        },
        "type": "object",
        "required": [
          "settings"
        ],
        "title": "SettingsResponse"
      },
      "SettingsUpdate": {
        "properties": {
          "show_country_suffix": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Country Suffix"
          }
        },
        "type": "object",
        "title": "SettingsUpdate"
      },
      "Stop": {
        "properties": {
          "place_id": {
            "type": "string",
            "title": "Place Id"
          },
          "seq": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Seq"
          },
          "kind": {
            "$ref": "#/components/schemas/StopKind"
          },
          "fixed": {
            "type": "boolean",
            "title": "Fixed",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "stop_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StopType"
              }
            ],
            "default": "OTHER"
          },
          "arrival_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arrival Time"
          },
          "departure_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departure Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "booking_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Info"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "cost_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Info"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 3
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "day_id": {
            "type": "string",
            "title": "Day Id"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "place_id",
          "seq",
          "kind",
          "id",
          "day_id",
          "trip_id",
          "created_at",
          "updated_at"
        ],
        "title": "Stop",
        "description": "Stop schema"
      },
      "StopBulkReorder": {
        "properties": {
          "reorders": {
            "items": {
              "$ref": "#/components/schemas/StopReorder"
            },
            "type": "array",
            "minItems": 1,
            "title": "Reorders"
          }
        },
        "type": "object",
        "required": [
          "reorders"
        ],
        "title": "StopBulkReorder",
        "description": "Schema for bulk reordering stops"
      },
      "StopCreate": {
        "properties": {
          "place_id": {
            "type": "string",
            "title": "Place Id"
          },
          "seq": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Seq"
          },
          "kind": {
            "$ref": "#/components/schemas/StopKind"
          },
          "fixed": {
            "type": "boolean",
            "title": "Fixed",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "stop_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StopType"
              }
            ],
            "default": "OTHER"
          },
          "arrival_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arrival Time"
          },
          "departure_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departure Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "booking_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Info"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "cost_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Info"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 3
          }
        },
        "type": "object",
        "required": [
          "place_id",
          "seq",
          "kind"
        ],
        "title": "StopCreate",
        "description": "Schema for creating a stop"
      },
      "StopKind": {
        "type": "string",
        "enum": [
          "START",
          "VIA",
          "END"
        ],
        "title": "StopKind",
        "description": "Route planning stop types (match DB enum values)"
      },
      "StopList": {
        "properties": {
          "stops": {
            "items": {
              "$ref": "#/components/schemas/StopWithPlace"
            },
            "type": "array",
            "title": "Stops"
          }
        },
        "type": "object",
        "required": [
          "stops"
        ],
        "title": "StopList",
        "description": "Legacy stop list schema (optionally includes place info)"
      },
      "StopReorder": {
        "properties": {
          "stop_id": {
            "type": "string",
            "title": "Stop Id"
          },
          "new_seq": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "New Seq"
          }
        },
        "type": "object",
        "required": [
          "stop_id",
          "new_seq"
        ],
        "title": "StopReorder",
        "description": "Schema for reordering stops within a day"
      },
      "StopType": {
        "type": "string",
        "enum": [
          "ACCOMMODATION",
          "FOOD",
          "ATTRACTION",
          "ACTIVITY",
          "SHOPPING",
          "GAS",
          "TRANSPORT",
          "SERVICES",
          "NATURE",
          "CULTURE",
          "NIGHTLIFE",
          "OTHER"
        ],
        "title": "StopType",
        "description": "User-friendly stop categories (match DB enum values)"
      },
      "StopTypeInfo": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StopType"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "type",
          "label",
          "description",
          "icon",
          "color"
        ],
        "title": "StopTypeInfo",
        "description": "Stop type information for UI"
      },
      "StopUpdate": {
        "properties": {
          "place_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place Id"
          },
          "seq": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seq"
          },
          "kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StopKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "fixed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fixed"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "stop_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StopType"
              },
              {
                "type": "null"
              }
            ]
          },
          "arrival_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arrival Time"
          },
          "departure_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departure Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "booking_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Info"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "cost_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Info"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "title": "StopUpdate",
        "description": "Schema for updating a stop"
      },
      "StopWithPlace": {
        "properties": {
          "place_id": {
            "type": "string",
            "title": "Place Id"
          },
          "seq": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Seq"
          },
          "kind": {
            "$ref": "#/components/schemas/StopKind"
          },
          "fixed": {
            "type": "boolean",
            "title": "Fixed",
            "default": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "stop_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StopType"
              }
            ],
            "default": "OTHER"
          },
          "arrival_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arrival Time"
          },
          "departure_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departure Time"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "booking_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Info"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "cost_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Info"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority",
            "default": 3
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "day_id": {
            "type": "string",
            "title": "Day Id"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "place": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          }
        },
        "type": "object",
        "required": [
          "place_id",
          "seq",
          "kind",
          "id",
          "day_id",
          "trip_id",
          "created_at",
          "updated_at"
        ],
        "title": "StopWithPlace",
        "description": "Stop schema with place information included"
      },
      "StopsSummary": {
        "properties": {
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "total_stops": {
            "type": "integer",
            "title": "Total Stops"
          },
          "by_type": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "By Type",
            "description": "Count of stops by type (accommodation, food, attraction, etc.)"
          }
        },
        "type": "object",
        "required": [
          "trip_id",
          "total_stops",
          "by_type"
        ],
        "title": "StopsSummary",
        "description": "Schema for trip stops summary"
      },
      "Trip": {
        "properties": {
          "slug": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Slug"
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "destination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TripStatus"
              }
            ],
            "default": "active"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "members": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TripMember"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Members"
          },
          "created_by_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TripCreator"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "slug",
          "title",
          "id",
          "created_by",
          "created_at",
          "updated_at"
        ],
        "title": "Trip",
        "description": "Trip schema"
      },
      "TripCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title",
            "description": "Trip title (required)"
          },
          "destination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination",
            "description": "Trip destination (optional)"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Trip start date (optional) - format: YYYY-MM-DD"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Trip timezone (optional, defaults to UTC)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TripStatus"
              }
            ],
            "description": "Trip status (defaults to 'draft')",
            "default": "draft"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "description": "Whether the trip is published (defaults to false)",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "TripCreate",
        "description": "Schema for creating a trip"
      },
      "TripCreateResponse": {
        "properties": {
          "trip": {
            "$ref": "#/components/schemas/Trip"
          },
          "next_steps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Next Steps"
          },
          "suggestions": {
            "type": "object",
            "title": "Suggestions"
          }
        },
        "type": "object",
        "required": [
          "trip",
          "next_steps",
          "suggestions"
        ],
        "title": "TripCreateResponse",
        "description": "Enhanced trip creation response with next steps"
      },
      "TripCreator": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "display_name"
        ],
        "title": "TripCreator",
        "description": "Trip creator user info"
      },
      "TripList": {
        "properties": {
          "trips": {
            "items": {
              "$ref": "#/components/schemas/Trip"
            },
            "type": "array",
            "title": "Trips"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "trips",
          "total",
          "page",
          "size"
        ],
        "title": "TripList",
        "description": "Legacy trip list response schema (deprecated)"
      },
      "TripMember": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/TripMemberRole"
          },
          "invited_email": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited Email"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/TripMemberStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "role",
          "id",
          "trip_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "TripMember",
        "description": "Trip member schema"
      },
      "TripMemberRole": {
        "type": "string",
        "enum": [
          "owner",
          "editor",
          "viewer"
        ],
        "title": "TripMemberRole"
      },
      "TripMemberStatus": {
        "type": "string",
        "enum": [
          "active",
          "pending",
          "removed"
        ],
        "title": "TripMemberStatus"
      },
      "TripStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "completed",
          "archived"
        ],
        "title": "TripStatus",
        "description": "Trip status enumeration"
      },
      "TripUpdate": {
        "properties": {
          "slug": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "destination": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Trip start date - format: YYYY-MM-DD"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TripStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Published"
          }
        },
        "type": "object",
        "title": "TripUpdate",
        "description": "Schema for updating a trip"
      },
      "UserProfile": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "display_name",
          "status"
        ],
        "title": "UserProfile",
        "description": "User profile schema"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your Bearer token in the format: Bearer <token>"
      }
    },
    "examples": {
      "TripCreateExample": {
        "summary": "Create a new trip",
        "value": {
          "title": "Israel Adventure",
          "destination": "Israel",
          "start_date": "2024-06-15",
          "timezone": "Asia/Jerusalem"
        }
      },
      "TripCreateResponse": {
        "summary": "Enhanced trip creation response",
        "value": {
          "trip": {
            "id": "01K4AHPK4S1KVTYDB5ASTGTM8K",
            "title": "Israel Adventure",
            "destination": "Israel",
            "start_date": "2024-06-15",
            "slug": "israel-adventure"
          },
          "next_steps": [
            "Create your first day in Israel",
            "Add start and end locations for your journey"
          ],
          "suggestions": {
            "planning_timeline": "You have plenty of time to plan - consider researching seasonal activities"
          }
        }
      },
      "RoutingErrorExample": {
        "summary": "Enhanced routing error response",
        "value": {
          "detail": "Coordinates are outside the supported geographic region",
          "error_type": "OUT_OF_BOUNDS",
          "supported_regions": [
            "Israel",
            "Palestine"
          ],
          "suggestions": [
            "Try using nearby major cities or landmarks",
            "Check if all locations are in the same general region",
            "Consider splitting the trip into multiple days"
          ]
        }
      },
      "PlaceSearchExample": {
        "summary": "Place search with caching",
        "value": {
          "places": [
            {
              "id": "01K4AHPK4S1KVTYDB5ASTGTM8K",
              "name": "Western Wall",
              "formatted_address": "Western Wall, Jerusalem, Israel",
              "lat": 31.7767,
              "lon": 35.2345,
              "place_type": "attraction"
            }
          ],
          "total": 1,
          "cached": true,
          "cache_age": 120
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://api.mytrip.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication and user management"
    },
    {
      "name": "trips",
      "description": "Trip creation and management with enhanced validation"
    },
    {
      "name": "days",
      "description": "Day-by-day trip planning and organization"
    },
    {
      "name": "stops",
      "description": "Comprehensive stops management with 12 categories"
    },
    {
      "name": "places",
      "description": "Place search and geocoding with aggressive caching"
    },
    {
      "name": "routing",
      "description": "Intelligent routing with hybrid GraphHopper integration"
    },
    {
      "name": "settings",
      "description": "User settings and preferences"
    }
  ]
}