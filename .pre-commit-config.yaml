repos:
  # Security hooks - MUST BE FIRST
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Backend Python hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: detect-private-key

  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        files: ^backend/
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        files: ^backend/
        args: ["--profile", "black"]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        files: ^backend/
        args: [--fix, --exit-non-zero-on-fix]

  # Frontend TypeScript/JavaScript hooks
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.54.0
    hooks:
      - id: eslint
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        additional_dependencies:
          - eslint@8.54.0
          - eslint-config-next@14.0.4
          - "@typescript-eslint/parser@6.12.0"
          - "@typescript-eslint/eslint-plugin@6.12.0"

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$
        additional_dependencies:
          - prettier@3.1.0
          - prettier-plugin-tailwindcss@0.5.7

  # TypeScript type checking
  - repo: local
    hooks:
      - id: tsc
        name: TypeScript type check
        entry: bash -c 'cd frontend && npx tsc --noEmit'
        language: system
        files: ^frontend/.*\.(ts|tsx)$
        pass_filenames: false

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'backend/', '-f', 'json', '-o', 'bandit-report.json']
        pass_filenames: false

  # Custom security checks
  - repo: local
    hooks:
      - id: check-credentials
        name: Check for hardcoded credentials
        entry: bash -c 'if grep -r -E "(password|secret|key|token|credential).*=" --include="*.py" --include="*.js" --include="*.sh" --include="*.json" --exclude-dir=node_modules --exclude-dir=.git --exclude="*.example" --exclude="*.template" .; then echo "❌ Potential hardcoded credentials found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-github-tokens
        name: Check for GitHub tokens
        entry: bash -c 'if grep -r -E "ghp_[a-zA-Z0-9]{36}" --include="*.py" --include="*.js" --include="*.sh" --include="*.txt" --include="*.md" --exclude-dir=.git .; then echo "❌ GitHub tokens found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-database-credentials
        name: Check for database credentials
        entry: bash -c 'if grep -r -E "(mysql|postgres|mongodb).*-p.*['\''\""][^'\''\"]*['\''\""]" --include="*.py" --include="*.js" --include="*.sh" --exclude-dir=node_modules --exclude-dir=.git .; then echo "❌ Database credentials found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-ftp-credentials
        name: Check for FTP credentials
        entry: bash -c 'if grep -r -E "ftp.*password" --include="*.py" --include="*.js" --include="*.sh" --include="*.json" --exclude-dir=node_modules --exclude-dir=.git .; then echo "❌ FTP credentials found!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-env-files
        name: Check for committed .env files
        entry: bash -c 'if find . -name ".env*" -not -name ".env.example" -not -name ".env.template" -not -path "./.git/*" | grep -q .; then echo "❌ Environment files found! Use .env.example instead."; exit 1; fi'
        language: system
        pass_filenames: false