{"openapi":"3.1.0","info":{"title":"MyTrip - Road Trip Planner API","description":"\n    A comprehensive road trip planning API with route optimization and user authentication.\n\n    ## Features\n\n    - ✅ **Trip Management**: Create, view, and manage road trips\n    - ✅ **Flexible Dates**: Optional start dates for trip planning\n    - ✅ **Auto-Generated Slugs**: URL-friendly trip identifiers\n    - ✅ **Trip Statuses**: Draft, Active, Completed, Archived\n    - ✅ **User Authentication**: Secure Bearer token authentication\n    - ✅ **Route Planning**: Integration with GraphHopper routing\n    - ✅ **Collaborative Planning**: Multi-user trip management\n\n    ## Authentication\n\n    This API uses Bearer token authentication. To get started:\n\n    1. **Login** using the `/auth/login` endpoint with your email address\n    2. **Copy the access_token** from the response\n    3. **Click the \"Authorize\" button** below and enter: `Bearer <your_token>`\n    4. **Use protected endpoints** - they will automatically include your authentication\n\n    ### Quick Start Example:\n\n    ```bash\n    # 1. Login to get your token\n    curl -X POST \"http://localhost:8100/auth/login\" \\\n         -H \"Content-Type: application/json\" \\\n         -d '{\"email\": \"adar.bahar@gmail.com\"}'\n\n    # 2. Create a new trip (start_date is optional)\n    curl -X POST \"http://localhost:8100/trips/\" \\\n         -H \"Authorization: Bearer fake_token_YOUR_TOKEN_HERE\" \\\n         -H \"Content-Type: application/json\" \\\n         -d '{\"title\": \"My Road Trip\", \"destination\": \"California, USA\"}'\n\n    # 3. List your trips\n    curl -X GET \"http://localhost:8100/trips/\" \\\n         -H \"Authorization: Bearer fake_token_YOUR_TOKEN_HERE\"\n    ```\n\n    ## Trip Creation\n\n    When creating trips:\n    - **title** is required (1-255 characters)\n    - **destination** is optional (max 255 characters)\n    - **start_date** is optional (format: YYYY-MM-DD)\n    - **slug** is auto-generated from the title\n    - **status** defaults to \"draft\"\n\n    **Development Note**: This is a development authentication system. Any valid email address can be used to login and will automatically create a user account.\n    ","version":"1.0.0"},"paths":{"/health":{"get":{"summary":"Health Check","description":"Health check endpoint","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"summary":"Root","description":"Root endpoint","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/auth/login":{"post":{"tags":["auth"],"summary":"Fake Login","description":"**Login with Email Address**\n\nThis is a development authentication endpoint that creates or returns a user for any valid email address.\n\n**How to use:**\n1. Enter any valid email address\n2. Copy the `access_token` from the response\n3. Click the \"Authorize\" button in Swagger UI\n4. Enter: `Bearer <your_access_token>`\n5. Use protected endpoints with automatic authentication\n\n**Example:**\n- Email: `adar.bahar@gmail.com`\n- Response: `{\"access_token\": \"fake_token_ABC123\", ...}`\n- Authorization: `Bearer fake_token_ABC123`\n\n**Note:** This automatically creates a new user account if the email doesn't exist.","operationId":"fake_login_auth_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/logout":{"post":{"tags":["auth"],"summary":"Logout","description":"**Logout**\n\nLogout endpoint for completeness. Since tokens are stateless in this development system,\nthis endpoint simply returns a success message.\n\n**Note:** In a production system, this would invalidate the token server-side.\nFor this development system, simply remove the token from your client storage.","operationId":"logout_auth_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"BearerAuth":[]}]}},"/auth/me":{"get":{"tags":["auth"],"summary":"Get Current User Profile","description":"**Get Current User Profile**\n\nReturns the profile information for the currently authenticated user.\n\n**Requires Authentication:** You must include a valid Bearer token in the Authorization header.\n\n**How to authenticate:**\n1. First login using `/auth/login` to get your token\n2. Click the \"Authorize\" button and enter: `Bearer <your_token>`\n3. This endpoint will then return your user profile","operationId":"get_current_user_profile_auth_me_get","parameters":[{"name":"authorization","in":"header","required":false,"schema":{"type":"string","title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserProfile"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/trips/":{"post":{"tags":["trips"],"summary":"Create Trip","description":"**Create a New Trip**\n\nCreate a new road trip with the provided details.\n\n**Authentication Required:** You must be logged in to create trips.\n\n**Note:** The trip slug is auto-generated from the title and must be unique among your trips.","operationId":"create_trip_trips__post","parameters":[{"name":"authorization","in":"header","required":false,"schema":{"type":"string","title":"Authorization"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TripCreate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trip"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]},"get":{"tags":["trips"],"summary":"List Trips","description":"**List Your Trips**\n\nGet a paginated list of your trips with optional filtering.\n\n**Authentication Required:** You must be logged in to view trips.\n\n**Parameters:**\n- `status`: Filter by trip status (draft, active, completed, archived)\n- `owner`: Filter by owner ID (defaults to your trips)\n- `page`: Page number (starts at 1)\n- `size`: Number of trips per page (1-100)\n\n**Returns:** Paginated list of trips with metadata.","operationId":"list_trips_trips__get","parameters":[{"name":"status","in":"query","required":false,"schema":{"anyOf":[{"$ref":"#/components/schemas/TripStatus"},{"type":"null"}],"title":"Status"}},{"name":"owner","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Owner"}},{"name":"page","in":"query","required":false,"schema":{"type":"integer","minimum":1,"default":1,"title":"Page"}},{"name":"size","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"default":20,"title":"Size"}},{"name":"authorization","in":"header","required":false,"schema":{"type":"string","title":"Authorization"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TripList"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/trips/{trip_id}":{"get":{"tags":["trips"],"summary":"Get Trip","description":"Get a specific trip","operationId":"get_trip_trips__trip_id__get","parameters":[{"name":"trip_id","in":"path","required":true,"schema":{"type":"string","title":"Trip Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trip"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]},"patch":{"tags":["trips"],"summary":"Update Trip","description":"Update a trip","operationId":"update_trip_trips__trip_id__patch","parameters":[{"name":"trip_id","in":"path","required":true,"schema":{"type":"string","title":"Trip Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TripUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trip"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/trips/{trip_id}/archive":{"post":{"tags":["trips"],"summary":"Archive Trip","description":"Archive a trip","operationId":"archive_trip_trips__trip_id__archive_post","parameters":[{"name":"trip_id","in":"path","required":true,"schema":{"type":"string","title":"Trip Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trip"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/trips/{trip_id}/publish":{"post":{"tags":["trips"],"summary":"Publish Trip","description":"Publish a trip","operationId":"publish_trip_trips__trip_id__publish_post","parameters":[{"name":"trip_id","in":"path","required":true,"schema":{"type":"string","title":"Trip Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Trip"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/routing/days/{day_id}/route/compute":{"post":{"tags":["routing"],"summary":"Compute Route","description":"Compute a route for a day","operationId":"compute_route_routing_days__day_id__route_compute_post","parameters":[{"name":"day_id","in":"path","required":true,"schema":{"type":"string","title":"Day Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RouteComputeRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RoutePreview"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}},"/routing/days/{day_id}/route/commit":{"post":{"tags":["routing"],"summary":"Commit Route","description":"Commit a computed route as a new version","operationId":"commit_route_routing_days__day_id__route_commit_post","parameters":[{"name":"day_id","in":"path","required":true,"schema":{"type":"string","title":"Day Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RouteCommitRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RouteVersionSchema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"BearerAuth":[]}]}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LoginRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"LoginRequest","description":"Login request schema"},"LoginResponse":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type","default":"bearer"},"user":{"$ref":"#/components/schemas/UserProfile"}},"type":"object","required":["access_token","user"],"title":"LoginResponse","description":"Login response schema"},"RouteCommitRequest":{"properties":{"preview_token":{"type":"string","title":"Preview Token"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"}},"type":"object","required":["preview_token"],"title":"RouteCommitRequest","description":"Route commit request"},"RouteComputeRequest":{"properties":{"profile":{"type":"string","pattern":"^(car|motorcycle|bike)$","title":"Profile"},"options":{"anyOf":[{"$ref":"#/components/schemas/RouteOptions"},{"type":"null"}]}},"type":"object","required":["profile"],"title":"RouteComputeRequest","description":"Route computation request"},"RouteLegSchema":{"properties":{"id":{"type":"string","title":"Id"},"route_version_id":{"type":"string","title":"Route Version Id"},"seq":{"type":"integer","title":"Seq"},"distance_km":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Distance Km"},"duration_min":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Duration Min"},"geojson":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Geojson"},"meta":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Meta"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["id","route_version_id","seq","distance_km","duration_min","geojson","meta","created_at","updated_at"],"title":"RouteLegSchema","description":"Route leg schema"},"RouteOptions":{"properties":{"avoid_highways":{"type":"boolean","title":"Avoid Highways","default":false},"avoid_tolls":{"type":"boolean","title":"Avoid Tolls","default":false},"additional_options":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Additional Options"}},"type":"object","title":"RouteOptions","description":"Route computation options"},"RoutePreview":{"properties":{"total_km":{"type":"number","title":"Total Km"},"total_min":{"type":"number","title":"Total Min"},"geometry":{"type":"object","title":"Geometry"},"legs":{"items":{"type":"object"},"type":"array","title":"Legs"},"debug":{"type":"object","title":"Debug"},"preview_token":{"type":"string","title":"Preview Token"}},"type":"object","required":["total_km","total_min","geometry","legs","debug","preview_token"],"title":"RoutePreview","description":"Route preview response"},"RouteVersionSchema":{"properties":{"id":{"type":"string","title":"Id"},"day_id":{"type":"string","title":"Day Id"},"version":{"type":"integer","title":"Version"},"is_active":{"type":"boolean","title":"Is Active"},"is_primary":{"type":"boolean","title":"Is Primary"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"profile_used":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Profile Used"},"total_km":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Total Km"},"total_min":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Total Min"},"geojson":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Geojson"},"totals":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Totals"},"stop_snapshot":{"anyOf":[{"type":"object"},{"type":"null"}],"title":"Stop Snapshot"},"created_by":{"type":"string","title":"Created By"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"legs":{"anyOf":[{"items":{"$ref":"#/components/schemas/RouteLegSchema"},"type":"array"},{"type":"null"}],"title":"Legs"}},"type":"object","required":["id","day_id","version","is_active","is_primary","name","profile_used","total_km","total_min","geojson","totals","stop_snapshot","created_by","created_at","updated_at"],"title":"RouteVersionSchema","description":"Route version schema"},"Trip":{"properties":{"slug":{"type":"string","maxLength":100,"minLength":1,"title":"Slug"},"title":{"type":"string","maxLength":255,"minLength":1,"title":"Title"},"destination":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Destination"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"timezone":{"anyOf":[{"type":"string","maxLength":50},{"type":"null"}],"title":"Timezone"},"status":{"allOf":[{"$ref":"#/components/schemas/TripStatus"}],"default":"active"},"is_published":{"type":"boolean","title":"Is Published","default":false},"id":{"type":"string","title":"Id"},"created_by":{"type":"string","title":"Created By"},"deleted_at":{"anyOf":[{"type":"string","format":"date-time"},{"type":"null"}],"title":"Deleted At"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"},"members":{"anyOf":[{"items":{"$ref":"#/components/schemas/TripMember"},"type":"array"},{"type":"null"}],"title":"Members"},"created_by_user":{"anyOf":[{"$ref":"#/components/schemas/TripCreator"},{"type":"null"}]}},"type":"object","required":["slug","title","id","created_by","created_at","updated_at"],"title":"Trip","description":"Trip schema"},"TripCreate":{"properties":{"title":{"type":"string","maxLength":255,"minLength":1,"title":"Title","description":"Trip title (required)"},"destination":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Destination","description":"Trip destination (optional)"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date","description":"Trip start date (optional) - format: YYYY-MM-DD"},"timezone":{"anyOf":[{"type":"string","maxLength":50},{"type":"null"}],"title":"Timezone","description":"Trip timezone (optional, defaults to UTC)"},"status":{"allOf":[{"$ref":"#/components/schemas/TripStatus"}],"description":"Trip status (defaults to 'draft')","default":"draft"},"is_published":{"type":"boolean","title":"Is Published","description":"Whether the trip is published (defaults to false)","default":false}},"type":"object","required":["title"],"title":"TripCreate","description":"Schema for creating a trip"},"TripCreator":{"properties":{"id":{"type":"string","title":"Id"},"email":{"type":"string","title":"Email"},"display_name":{"type":"string","title":"Display Name"}},"type":"object","required":["id","email","display_name"],"title":"TripCreator","description":"Trip creator user info"},"TripList":{"properties":{"trips":{"items":{"$ref":"#/components/schemas/Trip"},"type":"array","title":"Trips"},"total":{"type":"integer","title":"Total"},"page":{"type":"integer","title":"Page"},"size":{"type":"integer","title":"Size"}},"type":"object","required":["trips","total","page","size"],"title":"TripList","description":"Trip list response schema"},"TripMember":{"properties":{"role":{"$ref":"#/components/schemas/TripMemberRole"},"invited_email":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Invited Email"},"id":{"type":"string","title":"Id"},"trip_id":{"type":"string","title":"Trip Id"},"user_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"User Id"},"status":{"$ref":"#/components/schemas/TripMemberStatus"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"updated_at":{"type":"string","format":"date-time","title":"Updated At"}},"type":"object","required":["role","id","trip_id","status","created_at","updated_at"],"title":"TripMember","description":"Trip member schema"},"TripMemberRole":{"type":"string","enum":["owner","editor","viewer"],"title":"TripMemberRole"},"TripMemberStatus":{"type":"string","enum":["active","pending","removed"],"title":"TripMemberStatus"},"TripStatus":{"type":"string","enum":["draft","active","completed","archived"],"title":"TripStatus","description":"Trip status enumeration"},"TripUpdate":{"properties":{"slug":{"anyOf":[{"type":"string","maxLength":100,"minLength":1},{"type":"null"}],"title":"Slug"},"title":{"anyOf":[{"type":"string","maxLength":255,"minLength":1},{"type":"null"}],"title":"Title"},"destination":{"anyOf":[{"type":"string","maxLength":255},{"type":"null"}],"title":"Destination"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"timezone":{"anyOf":[{"type":"string","maxLength":50},{"type":"null"}],"title":"Timezone"},"status":{"anyOf":[{"$ref":"#/components/schemas/TripStatus"},{"type":"null"}]},"is_published":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Published"}},"type":"object","title":"TripUpdate","description":"Schema for updating a trip"},"UserProfile":{"properties":{"id":{"type":"string","title":"Id"},"email":{"type":"string","title":"Email"},"display_name":{"type":"string","title":"Display Name"},"status":{"type":"string","title":"Status"}},"type":"object","required":["id","email","display_name","status"],"title":"UserProfile","description":"User profile schema"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"Enter your Bearer token in the format: Bearer <token>"}}}}